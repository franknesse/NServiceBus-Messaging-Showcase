{"Name":"RetryBatches/ByStatus/ReduceInitialBatchSize","Version":54002,"Collections":["RetryBatches"],"LockMode":0,"Priority":1,"State":0,"IndexDefinition":{"SourceType":"Documents","LockMode":null,"Priority":"Normal","State":"Normal","OutputReduceToCollection":null,"PatternForOutputReduceToCollectionReferences":null,"PatternReferencesCollectionName":null,"ReduceOutputIndex":null,"DeploymentMode":null,"Name":"RetryBatches/ByStatus/ReduceInitialBatchSize","Reduce":"results.GroupBy(result => new {\r\n    RequestId = result.RequestId,\r\n    RetryType = result.RetryType\r\n}).Select(g => new {\r\n    RequestId = g.Key.RequestId,\r\n    RetryType = g.Key.RetryType,\r\n    Originator = (DynamicEnumerable.FirstOrDefault(g)).Originator,\r\n    HasStagingBatches = Enumerable.Any(g, x => x.HasStagingBatches),\r\n    HasForwardingBatches = Enumerable.Any(g, x0 => x0.HasForwardingBatches),\r\n    InitialBatchSize = Enumerable.Sum(g, x1 => ((int) x1.InitialBatchSize)),\r\n    StartTime = (DynamicEnumerable.FirstOrDefault(g)).StartTime,\r\n    Last = DynamicEnumerable.Max(g, x2 => ((DateTime) x2.Last)),\r\n    Classifier = (DynamicEnumerable.FirstOrDefault(g)).Classifier\r\n})","Type":"MapReduce","Maps":["docs.RetryBatches.Select(doc => new {\r\n    RequestId = doc.RequestId,\r\n    RetryType = doc.RetryType,\r\n    HasStagingBatches = doc.Status == 2,\r\n    HasForwardingBatches = doc.Status == 3,\r\n    InitialBatchSize = doc.InitialBatchSize,\r\n    Originator = doc.Originator,\r\n    Classifier = doc.Classifier,\r\n    StartTime = doc.StartTime,\r\n    Last = doc.Last\r\n})"],"ClusterState":{"LastStateIndex":0},"Fields":{},"Configuration":{},"AdditionalSources":{},"AdditionalAssemblies":[]}}